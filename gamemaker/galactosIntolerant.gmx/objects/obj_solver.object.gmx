<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_win_btn.visible = 0;
global.win = 0;

if (!scr_action_locked() &amp;&amp; global.turn &gt; 0)
{
    cardinal_angle = 360/global.cardinal_count;
    
    var c = 0;
    for (i = 0; i &lt; global.planet_count; i += 1)
    {
        c_nr = global.planets[i].current_degrees;
        c_nr = c_nr mod 360;
        c_nr = c_nr / cardinal_angle;
        
        if (abs(c_nr - round(c_nr)) &lt; global.cardinal_threshold)
        {
            possible_win_nr[c] = round(c_nr) mod (global.cardinal_count/2);
            possible_win_id[c] = global.planets[i];
            c += 1;
        }
    }
    
    // find the cardinal with the most planets on it 
    // (returns [cardinal_index, planet_count]
    r = scr_list_max(possible_win_nr, c);
    
    // if the planet count on that cardinal with the most
    // planets matches or exceeds the win condition, trigger
    if (r[1] &gt;= global.win_condition_align_count)
    {        
        // trigger win button
        obj_win_btn.visible = 1;
        global.win = 1;
        
        // give me an array of all planets on the win-cardinal
        win_c = 0;
        for (i = 0; i &lt; c; i += 1)
        {
            if(possible_win_nr[i] == r[0])
            {
                win_ids[win_c] = possible_win_id[i];
                win_c += 1;
            }
        }
        
        // TODO: hightlight these planets!
        /*
        for (i = 0; i &lt; win_c; i += 1)
        {
            show_debug_message("HIGHLIGHT: "+string(win_ids[i])+" on "+string(r[0]));
        }
        */
        
        global.align_count = win_c;
        global.win_cardinal = r[0];
    }
}

if !(global.score)
{
    global.lost = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
